# create dimreduction125 model
d = layers.Input(shape=(500,4))
conv1 = layers.Conv1D(64, 11, padding='same', activation=tf.nn.relu)(d)
conv2 = layers.Conv1D(32, 3, padding='same', activation=tf.nn.relu)(conv1)
conv3 = layers.Conv1D(64, 9, padding='same', activation=tf.nn.relu)(conv2)
conv4 = layers.Conv1D(32, 13, padding='same', activation=tf.nn.relu)(conv3)
maxpooling1d1_1 = layers.MaxPooling1D(pool_size=2, strides=2)(conv2)
maxpooling1d1_2 = layers.MaxPooling1D(pool_size=2, strides=2)(conv4)
concat1 = layers.Concatenate(axis=2)([maxpooling1d1_1, maxpooling1d1_2])
conv5 = layers.Conv1D(512, 7, padding='same', activation=tf.nn.relu)(concat1)
conv6 = layers.Conv1D(256, 5, padding='same', activation=tf.nn.relu)(conv5)
conv7 = layers.Conv1D(1024, 7, padding='same', activation=tf.nn.relu)(conv6)
conv8 = layers.Conv1D(512, 3, padding='same', activation=tf.nn.relu)(conv7)
maxpooling1d2_1 = layers.MaxPooling1D(pool_size=2, strides=2)(conv6)
maxpooling1d2_2 = layers.MaxPooling1D(pool_size=2, strides=2)(conv8)
concat2 = layers.Concatenate(axis=2)([maxpooling1d2_1, maxpooling1d2_2])
spatialdropout1d1 = layers.SpatialDropout1D(0.16)(concat2)
conv9_1 = layers.Conv1D(128, 7, padding='same', activation=tf.nn.relu)(spatialdropout1d1)
conv9_2 = layers.Conv1D(128, 3, padding='same', activation=tf.nn.relu)(spatialdropout1d1)
dotted = layers.dot([conv9_1, conv9_2], axes=(2, 2))
activation = layers.Activation(tf.nn.sigmoid)(dotted)
globalavgpooling1d1_1 = layers.GlobalAveragePooling1D()(conv9_1)
globalavgpooling1d1_2 = layers.GlobalAveragePooling1D()(activation)
concat3 = layers.Concatenate(axis=1)([globalavgpooling1d1_1, globalavgpooling1d1_2])
reshape = layers.Reshape((-1, 1))(concat3)
conv10_1 = layers.Conv1D(256, 7, padding='same', activation=tf.nn.relu)(reshape)
conv10_2 = layers.Conv1D(32, 13, padding='same', activation=tf.nn.relu)(reshape)
conv10_3 = layers.Conv1D(128, 7, padding='same', activation=tf.nn.relu)(reshape)
conv11_1 = layers.Conv1D(128, 7, padding='same', activation=tf.nn.relu)(conv10_1)
conv11_2 = layers.Conv1D(128, 5, padding='same', activation=tf.nn.relu)(conv10_2)
conv11_3 = layers.Conv1D(32, 13, padding='same', activation=tf.nn.relu)(conv10_3)
spatialdropout1d2_1 = layers.SpatialDropout1D(0.16)(conv11_1)
spatialdropout1d2_2 = layers.SpatialDropout1D(0.16)(conv11_2)
spatialdropout1d2_3 = layers.SpatialDropout1D(0.16)(conv11_3)
conv12_1 = layers.Conv1D(64, 13, padding='same', activation=tf.nn.relu)(spatialdropout1d2_1)
conv12_2 = layers.Conv1D(512, 3, padding='same', activation=tf.nn.relu)(spatialdropout1d2_2)
conv12_3 = layers.Conv1D(64, 11, padding='same', activation=tf.nn.relu)(spatialdropout1d2_3)
globalavgpooling1d2_1 = layers.GlobalAveragePooling1D()(conv12_1)
globalmaxpooling1d2_1 = layers.GlobalMaxPooling1D()(conv12_1)
globalavgpooling1d2_2 = layers.GlobalAveragePooling1D()(conv12_2)
globalmaxpooling1d2_2 = layers.GlobalMaxPooling1D()(conv12_2)
globalavgpooling1d2_3 = layers.GlobalAveragePooling1D()(conv12_3)
globalmaxpooling1d2_3 = layers.GlobalMaxPooling1D()(conv12_3)
add1 = layers.Add()([globalavgpooling1d2_1, globalmaxpooling1d2_1])
add2 = layers.Add()([globalavgpooling1d2_2, globalmaxpooling1d2_2])
add3 = layers.Add()([globalavgpooling1d2_3, globalmaxpooling1d2_3])
fc1 = layers.Dense(1)(add1)
fc2 = layers.Dense(1)(add2)
fc3 = layers.Dense(1)(add3)
concat4 = layers.Concatenate(axis=1)([fc1, fc2, fc3])
model = Model(d, concat4)

# save model and visualize
path = './dimreduction125.h5'
tf.keras.models.save_model(model,path)
netron.start(path)
